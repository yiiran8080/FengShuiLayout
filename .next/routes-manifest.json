{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/design/[userId]",
      "regex": "^/api/design/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPuserId": "nxtPuserId"
      },
      "namedRegex": "^/api/design/(?<nxtPuserId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/reportDoc/[language]",
      "regex": "^/api/reportDoc/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlanguage": "nxtPlanguage"
      },
      "namedRegex": "^/api/reportDoc/(?<nxtPlanguage>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/reportUserDoc/[userId]",
      "regex": "^/api/reportUserDoc/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPuserId": "nxtPuserId"
      },
      "namedRegex": "^/api/reportUserDoc/(?<nxtPuserId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/reportUserDoc/[userId]/[language]",
      "regex": "^/api/reportUserDoc/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPuserId": "nxtPuserId",
        "nxtPlanguage": "nxtPlanguage"
      },
      "namedRegex": "^/api/reportUserDoc/(?<nxtPuserId>[^/]+?)/(?<nxtPlanguage>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/users/[userId]",
      "regex": "^/api/users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPuserId": "nxtPuserId"
      },
      "namedRegex": "^/api/users/(?<nxtPuserId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[locale]/auth/login",
      "regex": "^/([^/]+?)/auth/login(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/auth/login(?:/)?$"
    },
    {
      "page": "/[locale]/contact",
      "regex": "^/([^/]+?)/contact(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/contact(?:/)?$"
    },
    {
      "page": "/[locale]/design",
      "regex": "^/([^/]+?)/design(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/design(?:/)?$"
    },
    {
      "page": "/[locale]/privacy",
      "regex": "^/([^/]+?)/privacy(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/privacy(?:/)?$"
    },
    {
      "page": "/[locale]/report",
      "regex": "^/([^/]+?)/report(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/report(?:/)?$"
    },
    {
      "page": "/[locale]/success",
      "regex": "^/([^/]+?)/success(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/success(?:/)?$"
    },
    {
      "page": "/[locale]/terms",
      "regex": "^/([^/]+?)/terms(?:/)?$",
      "routeKeys": {
        "nxtPlocale": "nxtPlocale"
      },
      "namedRegex": "^/(?<nxtPlocale>[^/]+?)/terms(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}