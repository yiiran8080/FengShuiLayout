{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/fengshui/src/auth.ts"],"sourcesContent":["import NextAuth, { customFetch } from \"next-auth\";\r\n// import { authConfig } from \"./auth.config\";\r\nimport type { NextAuthConfig } from \"next-auth\";\r\nimport GoogleProvider from \"next-auth/providers/google\";\r\nimport AppleProvider from \"next-auth/providers/apple\";\r\nimport GithubProvider from \"next-auth/providers/github\";\r\nimport dbConnect from \"@/lib/mongoose\";\r\nimport User from \"@/models/User\";\r\nimport { ProxyAgent, fetch as undici } from \"undici\";\r\nconst dispatcher = new ProxyAgent({\r\n  uri: process.env.NEXTAUTH_URL_INTERNAL as string,\r\n});\r\nfunction proxy(...args: Parameters<typeof fetch>): ReturnType<typeof fetch> {\r\n  return undici(args[0], { ...(args[1] ?? {}), dispatcher });\r\n}\r\nexport const { handlers, signIn, signOut, auth } = NextAuth(\r\n  {\r\n    trustHost: true,\r\n\r\n    providers: [\r\n      GithubProvider,\r\n      GoogleProvider({\r\n        clientId: process.env.GOOGLE_CLIENT_ID as string,\r\n        clientSecret: process.env.GOOGLE_CLIENT_SECRET as string,\r\n\r\n        //redirectProxyUrl: process.env.NEXTAUTH_URL_INTERNAL as string,\r\n        [customFetch]: proxy,\r\n      }),\r\n      AppleProvider({\r\n        clientId: process.env.APPLE_ID as string,\r\n        clientSecret: process.env.APPLE_SECRET as string,\r\n      }),\r\n    ],\r\n    secret: process.env.NEXTAUTH_SECRET as string,\r\n    // debug: true,\r\n    callbacks: {\r\n      async jwt({ token, user, account }) {\r\n        if (account && user) {\r\n          token.accessToken = account.access_token;\r\n          token.id = user.id;\r\n        }\r\n        return token;\r\n      },\r\n\r\n      // async signIn({ user, account }) {\r\n      //   //console.log(\"OAuth请求目标URL:\", user, account);\r\n      //   return true;\r\n      //   // await dbConnect();\r\n\r\n      //   // // Extract user info from provider data\r\n      //   // const { id, email, name } = user;\r\n      //   // // const provider = account?.provider;\r\n\r\n      //   // // Check if user exists\r\n      //   // let existingUser = await User.findOne({ userId: id });\r\n\r\n      //   // if (!existingUser) {\r\n      //   //     // For new users, prompt them to fill additional info on first login\r\n      //   //     // Store minimal info and redirect to complete profile\r\n      //   //     return `/auth/complete-profile?id=${id}&email=${email}&provider=${provider}`;\r\n      //   // }\r\n      // },\r\n      async session({ session, token }) {\r\n        if (token && session.user) {\r\n          // 扩展 session.user 类型以包含 id 属性\r\n          (session.user as any) = {\r\n            ...session.user,\r\n            id: token.sub,\r\n            userId: session.user.email, //用谷歌邮箱做用户唯一id\r\n          };\r\n        }\r\n        //console.log(\"session\", session);\r\n        return session;\r\n      },\r\n    },\r\n    pages: {\r\n      // error: \"/error\",\r\n      // signIn: '/auth/login',\r\n    },\r\n  } satisfies NextAuthConfig\r\n  //   (req) => {\r\n  //     //   if (req) {\r\n  //     //   console.log(req) // do something with the request\r\n  //     //    }\r\n  //     return { ...authConfig };\r\n  //   }\r\n);\r\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;;;;;;AACA,MAAM,aAAa,IAAI,qLAAA,CAAA,aAAU,CAAC;IAChC,KAAK,QAAQ,GAAG,CAAC,qBAAqB;AACxC;AACA,SAAS,MAAM,GAAG,IAA8B;IAC9C,OAAO,CAAA,GAAA,qLAAA,CAAA,QAAM,AAAD,EAAE,IAAI,CAAC,EAAE,EAAE;QAAE,GAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QAAG;IAAW;AAC1D;AACO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,0VAAA,CAAA,UAAQ,AAAD,EACxD;IACE,WAAW;IAEX,WAAW;QACT,mNAAA,CAAA,UAAc;QACd,CAAA,GAAA,mNAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;YAE9C,gEAAgE;YAChE,CAAC,8MAAA,CAAA,cAAW,CAAC,EAAE;QACjB;QACA,CAAA,GAAA,kNAAA,CAAA,UAAa,AAAD,EAAE;YACZ,UAAU,QAAQ,GAAG,CAAC,QAAQ;YAC9B,cAAc,QAAQ,GAAG,CAAC,YAAY;QACxC;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,eAAe;IACf,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;YAChC,IAAI,WAAW,MAAM;gBACnB,MAAM,WAAW,GAAG,QAAQ,YAAY;gBACxC,MAAM,EAAE,GAAG,KAAK,EAAE;YACpB;YACA,OAAO;QACT;QAEA,oCAAoC;QACpC,mDAAmD;QACnD,iBAAiB;QACjB,0BAA0B;QAE1B,+CAA+C;QAC/C,yCAAyC;QACzC,8CAA8C;QAE9C,+BAA+B;QAC/B,8DAA8D;QAE9D,4BAA4B;QAC5B,gFAAgF;QAChF,kEAAkE;QAClE,yFAAyF;QACzF,SAAS;QACT,KAAK;QACL,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,SAAS,QAAQ,IAAI,EAAE;gBACzB,8BAA8B;gBAC7B,QAAQ,IAAI,GAAW;oBACtB,GAAG,QAAQ,IAAI;oBACf,IAAI,MAAM,GAAG;oBACb,QAAQ,QAAQ,IAAI,CAAC,KAAK;gBAC5B;YACF;YACA,kCAAkC;YAClC,OAAO;QACT;IACF;IACA,OAAO;IAGP;AACF","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/fengshui/src/lib/session.ts"],"sourcesContent":["import \"server-only\"; // 标记只在服务端使用（客户端组件引入会报错）\r\nimport { auth } from \"@/auth\";\r\nimport { cache } from \"react\";\r\n\r\nasync function getUserInfoFn() {\r\n  const session = await auth();\r\n\r\n  if (!session?.user) {\r\n    return null;\r\n  }\r\n\r\n  return session.user; // 格式如 { id, name, email, image }\r\n}\r\n\r\nexport const getUserInfo = cache(getUserInfoFn);\r\n"],"names":[],"mappings":";;;AAAA,0eAAsB,wBAAwB;AAC9C;AACA;;;;AAEA,eAAe;IACb,MAAM,UAAU,MAAM,CAAA,GAAA,6GAAA,CAAA,OAAI,AAAD;IAEzB,IAAI,CAAC,SAAS,MAAM;QAClB,OAAO;IACT;IAEA,OAAO,QAAQ,IAAI,EAAE,iCAAiC;AACxD;AAEO,MAAM,cAAc,CAAA,GAAA,sUAAA,CAAA,QAAK,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/fengshui/src/lib/mongoose.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\n// 使用本地MongoDB服务\r\nconst MONGODB_URI = process.env.MONGODB_URI;\r\n\r\nif (!MONGODB_URI) {\r\n    throw new Error(\r\n        'Please define the MONGODB_URI environment variable inside .env'\r\n    );\r\n}\r\n\r\n/**\r\n * Global is used here to maintain a cached connection across hot reloads\r\n * in development. This prevents connections growing exponentially\r\n * during API Route usage.\r\n */\r\nlet cached = global.mongoose;\r\n\r\nif (!cached) {\r\n    cached = global.mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function dbConnect() {\r\n    if (cached.conn) {\r\n        return cached.conn;\r\n    }\r\n\r\n    if (!cached.promise) {\r\n        const opts = {\r\n            // bufferCommands: false,\r\n            serverSelectionTimeoutMS: 30000,\r\n            socketTimeoutMS: 30000\r\n        };\r\n\r\n        cached.promise = mongoose.connect(MONGODB_URI, opts)\r\n            .then((mongoose) => {\r\n                console.log('MongoDB connected successfully');\r\n                return mongoose;\r\n            })\r\n            .catch((e) => {\r\n                console.error('MongoDB connection error:', e);\r\n                throw e;\r\n            });\r\n    }\r\n\r\n    try {\r\n        cached.conn = await cached.promise;\r\n    } catch (e) {\r\n        console.error(\"MongoDB connection failed:\", e);\r\n        cached.promise = null;\r\n        throw e;\r\n    }\r\n\r\n    return cached.conn;\r\n}\r\n\r\nexport default dbConnect; "],"names":[],"mappings":";;;AAAA;;AAEA,gBAAgB;AAChB,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IACd,MAAM,IAAI,MACN;AAER;AAEA;;;;CAIC,GACD,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC3D;AAEA,eAAe;IACX,IAAI,OAAO,IAAI,EAAE;QACb,OAAO,OAAO,IAAI;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,OAAO;YACT,yBAAyB;YACzB,0BAA0B;YAC1B,iBAAiB;QACrB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAC1C,IAAI,CAAC,CAAC;YACH,QAAQ,GAAG,CAAC;YACZ,OAAO;QACX,GACC,KAAK,CAAC,CAAC;YACJ,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,MAAM;QACV;IACR;IAEA,IAAI;QACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACtC,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,OAAO,GAAG;QACjB,MAAM;IACV;IAEA,OAAO,OAAO,IAAI;AACtB;uCAEe","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/fengshui/src/models/Design.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst designSchema = new mongoose.Schema({\r\n    userId: {\r\n        type: String,\r\n        ref: 'User',\r\n        required: true\r\n    },\r\n    canvasPosition: {\r\n        x: Number,\r\n        y: Number\r\n    },\r\n    compassRotation: Number,\r\n    scale: Number,\r\n\r\n    localItems: [{\r\n        id: String,\r\n        _type: String,\r\n        activeIcon: String,\r\n        data: {\r\n            cateType: String,\r\n            _type: String,\r\n            label: String,\r\n            icon: String,\r\n            // activeIcon: String,\r\n            parentRoom: {\r\n                type: mongoose.Schema.Types.Mixed,\r\n                default: null\r\n            },\r\n            size: {\r\n                width: Number,\r\n                height: Number\r\n            },\r\n        },\r\n        size: {\r\n            width: Number,\r\n            height: Number\r\n        },\r\n        position: {\r\n            x: Number,\r\n            y: Number\r\n        },\r\n        rotation: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        parentId: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        offset: {\r\n            x: Number,\r\n            y: Number\r\n        }\r\n    }],\r\n    createdAt: {\r\n        type: Date,\r\n        default: Date.now\r\n    },\r\n    updatedAt: {\r\n        type: Date,\r\n        default: Date.now\r\n    }\r\n});\r\n\r\n// 更新时自动更新updatedAt字段\r\ndesignSchema.pre('save', function (next) {\r\n    this.updatedAt = Date.now();\r\n    next();\r\n});\r\n\r\nconst Design = mongoose.models.Design || mongoose.model('Design', designSchema);\r\n\r\nexport default Design; "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,eAAe,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,QAAQ;QACJ,MAAM;QACN,KAAK;QACL,UAAU;IACd;IACA,gBAAgB;QACZ,GAAG;QACH,GAAG;IACP;IACA,iBAAiB;IACjB,OAAO;IAEP,YAAY;QAAC;YACT,IAAI;YACJ,OAAO;YACP,YAAY;YACZ,MAAM;gBACF,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,sBAAsB;gBACtB,YAAY;oBACR,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK;oBACjC,SAAS;gBACb;gBACA,MAAM;oBACF,OAAO;oBACP,QAAQ;gBACZ;YACJ;YACA,MAAM;gBACF,OAAO;gBACP,QAAQ;YACZ;YACA,UAAU;gBACN,GAAG;gBACH,GAAG;YACP;YACA,UAAU;gBACN,MAAM;gBACN,SAAS;YACb;YACA,UAAU;gBACN,MAAM;gBACN,SAAS;YACb;YACA,QAAQ;gBACJ,GAAG;gBACH,GAAG;YACP;QACJ;KAAE;IACF,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;IACA,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;AACJ;AAEA,qBAAqB;AACrB,aAAa,GAAG,CAAC,QAAQ,SAAU,IAAI;IACnC,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG;IACzB;AACJ;AAEA,MAAM,SAAS,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,UAAU;uCAEnD","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/fengshui/src/app/api/utils/gen-res-data.ts"],"sourcesContent":["export function genUnAuthData(msg?: string) {\r\n  return { status: 401, message: msg || \"Unauthorized\" };\r\n}\r\n\r\nexport function genSuccessData(data?: any) {\r\n  const res: any = { status: 0 };\r\n  if (data) res.data = data;\r\n  return res;\r\n}\r\n\r\nexport function genErrorData(msg?: string) {\r\n  return { status: -1, message: msg || \"server error\" };\r\n}\r\n"],"names":[],"mappings":";;;;;AAAO,SAAS,cAAc,GAAY;IACxC,OAAO;QAAE,QAAQ;QAAK,SAAS,OAAO;IAAe;AACvD;AAEO,SAAS,eAAe,IAAU;IACvC,MAAM,MAAW;QAAE,QAAQ;IAAE;IAC7B,IAAI,MAAM,IAAI,IAAI,GAAG;IACrB,OAAO;AACT;AAEO,SAAS,aAAa,GAAY;IACvC,OAAO;QAAE,QAAQ,CAAC;QAAG,SAAS,OAAO;IAAe;AACtD","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file://D%3A/code/fengshui/src/app/api/design/%5BuserId%5D/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { getUserInfo } from '@/lib/session';\r\nimport dbConnect from '@/lib/mongoose';\r\nimport Design from '@/models/Design';\r\nimport { genSuccessData, genUnAuthData, genErrorData } from \"../../utils/gen-res-data\";\r\n\r\nexport async function GET(request, { params }) {\r\n    const { userId } = await params;\r\n    try {\r\n        await dbConnect();\r\n        const design = await Design.findOne({ userId }).select('-__v');\r\n        return NextResponse.json(genSuccessData(design || {}))\r\n    } catch (error) {\r\n        console.error('Error fetching design:', error);\r\n        return NextResponse.json(genErrorData('Error fetching design'));\r\n    }\r\n}\r\n//TODO\r\nexport async function POST(request, { params }) {\r\n    const { userId } = await params;\r\n    try {\r\n        const userInfo = await getUserInfo();\r\n        if (userInfo == null) return Response.json(genUnAuthData());\r\n\r\n        const body = await request.json();\r\n        let localItems = body.localItems.map(item => {\r\n            return {\r\n                ...item,\r\n                _type: item.type,\r\n                data: {\r\n                    ...item.data,\r\n                    _type: item.data.type\r\n                }\r\n            }\r\n        })\r\n        await dbConnect();\r\n\r\n        let design = await Design.findOne({ userId });\r\n\r\n        if (design) {\r\n            for (let key in body) {\r\n                design[key] = body[key];\r\n            }\r\n            design.localItems = localItems;\r\n            await design.save();\r\n        } else {\r\n            await Design.create({\r\n                userId,\r\n                ...body,\r\n                localItems\r\n            });\r\n        }\r\n\r\n        return NextResponse.json(genSuccessData())\r\n    } catch (error) {\r\n        console.error('Error saving design:', error);\r\n        return NextResponse.json(genErrorData('Internal Server Error'));\r\n    }\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,IAAI,OAAO,EAAE,EAAE,MAAM,EAAE;IACzC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,IAAI;QACA,MAAM,CAAA,GAAA,wHAAA,CAAA,UAAS,AAAD;QACd,MAAM,SAAS,MAAM,yHAAA,CAAA,UAAM,CAAC,OAAO,CAAC;YAAE;QAAO,GAAG,MAAM,CAAC;QACvD,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAA,GAAA,kJAAA,CAAA,iBAAc,AAAD,EAAE,UAAU,CAAC;IACvD,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE;IAC1C;AACJ;AAEO,eAAe,KAAK,OAAO,EAAE,EAAE,MAAM,EAAE;IAC1C,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,IAAI;QACA,MAAM,WAAW,MAAM,CAAA,GAAA,uHAAA,CAAA,cAAW,AAAD;QACjC,IAAI,YAAY,MAAM,OAAO,SAAS,IAAI,CAAC,CAAA,GAAA,kJAAA,CAAA,gBAAa,AAAD;QAEvD,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,IAAI,aAAa,KAAK,UAAU,CAAC,GAAG,CAAC,CAAA;YACjC,OAAO;gBACH,GAAG,IAAI;gBACP,OAAO,KAAK,IAAI;gBAChB,MAAM;oBACF,GAAG,KAAK,IAAI;oBACZ,OAAO,KAAK,IAAI,CAAC,IAAI;gBACzB;YACJ;QACJ;QACA,MAAM,CAAA,GAAA,wHAAA,CAAA,UAAS,AAAD;QAEd,IAAI,SAAS,MAAM,yHAAA,CAAA,UAAM,CAAC,OAAO,CAAC;YAAE;QAAO;QAE3C,IAAI,QAAQ;YACR,IAAK,IAAI,OAAO,KAAM;gBAClB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;YAC3B;YACA,OAAO,UAAU,GAAG;YACpB,MAAM,OAAO,IAAI;QACrB,OAAO;YACH,MAAM,yHAAA,CAAA,UAAM,CAAC,MAAM,CAAC;gBAChB;gBACA,GAAG,IAAI;gBACP;YACJ;QACJ;QAEA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAA,GAAA,kJAAA,CAAA,iBAAc,AAAD;IAC1C,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE;IAC1C;AACJ","debugId":null}}]
}