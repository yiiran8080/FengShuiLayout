{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelng/Desktop/HarmoniqFengShui/FengShuiLayout/src/lib/mongoose.js"],"sourcesContent":["import mongoose from 'mongoose';\n\n// 使用本地MongoDB服务\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) {\n    throw new Error(\n        'Please define the MONGODB_URI environment variable inside .env'\n    );\n}\n\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections growing exponentially\n * during API Route usage.\n */\nlet cached = global.mongoose;\n\nif (!cached) {\n    cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function dbConnect() {\n    if (cached.conn) {\n        return cached.conn;\n    }\n\n    if (!cached.promise) {\n        const opts = {\n            // bufferCommands: false,\n            serverSelectionTimeoutMS: 30000,\n            socketTimeoutMS: 30000\n        };\n\n        cached.promise = mongoose.connect(MONGODB_URI, opts)\n            .then((mongoose) => {return mongoose;\n            })\n            .catch((e) => {throw e;\n            });\n    }\n\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {cached.promise = null;\n        throw e;\n    }\n\n    return cached.conn;\n}\n\nexport default dbConnect;\nexport { dbConnect as connectDB }; "],"names":[],"mappings":";;;;AAAA;;AAEA,gBAAgB;AAChB,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IACd,MAAM,IAAI,MACN;AAER;AAEA;;;;CAIC,GACD,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC3D;AAEA,eAAe;IACX,IAAI,OAAO,IAAI,EAAE;QACb,OAAO,OAAO,IAAI;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,OAAO;YACT,yBAAyB;YACzB,0BAA0B;YAC1B,iBAAiB;QACrB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAC1C,IAAI,CAAC,CAAC;YAAc,OAAO;QAC5B,GACC,KAAK,CAAC,CAAC;YAAO,MAAM;QACrB;IACR;IAEA,IAAI;QACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACtC,EAAE,OAAO,GAAG;QAAC,OAAO,OAAO,GAAG;QAC1B,MAAM;IACV;IAEA,OAAO,OAAO,IAAI;AACtB;uCAEe","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelng/Desktop/HarmoniqFengShui/FengShuiLayout/src/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst UserSchema = new mongoose.Schema({\n\tuserId: {\n\t\ttype: String,\n\t\trequired: true,\n\t\tunique: true,\n\t},\n\t// Add password field for email/password auth\n\tpassword: {\n\t\ttype: String,\n\t\trequired: false, // Not required for OAuth users\n\t},\n\t// Add authentication provider field\n\tprovider: {\n\t\ttype: String,\n\t\tdefault: \"credentials\",\n\t\trequired: false,\n\t},\n\t// Add name field for registration\n\tname: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n\tgender: {\n\t\ttype: String,\n\t\tenum: [\"female\", \"male\"],\n\t\trequired: true,\n\t\tdefault: \"female\",\n\t},\n\tbirthDateTime: {\n\t\ttype: Date,\n\t\trequired: true,\n\t\tdefault: new Date(1996, 2, 12, 22),\n\t},\n\temail: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n\tisLock: {\n\t\ttype: Boolean,\n\t\trequired: true,\n\t\tdefault: true,\n\t},\n\tgenStatus: {\n\t\ttype: String,\n\t\tenum: [\"none\", \"waiting\", \"done\"],\n\t\trequired: false,\n\t},\n\t// Add email verification fields\n\temailVerified: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n\tverificationToken: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n\t// Add free report tracking\n\tfreeReportStats: {\n\t\ttotalGenerated: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0,\n\t\t},\n\t\tlastGeneratedAt: {\n\t\t\ttype: Date,\n\t\t\tdefault: null,\n\t\t},\n\t\tfirstGeneratedAt: {\n\t\t\ttype: Date,\n\t\t\tdefault: null,\n\t\t},\n\t\tfavoriteRoomType: {\n\t\t\ttype: String,\n\t\t\tdefault: null,\n\t\t},\n\t\tfavoriteDirection: {\n\t\t\ttype: String,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t\tdefault: Date.now,\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t\tdefault: Date.now,\n\t},\n});\n\n// Virtual relationship to free report activities\nUserSchema.virtual(\"freeReportActivities\", {\n\tref: \"FreeReportActivity\",\n\tlocalField: \"userId\",\n\tforeignField: \"userId\",\n});\n\n// Modify Project references\nUserSchema.virtual(\"projects\", {\n\tref: \"Project\",\n\tlocalField: \"userId\",\n\tforeignField: \"owner\",\n});\n\n// Set options to allow virtual properties to be included in JSON\nUserSchema.set(\"toJSON\", { virtuals: true });\nUserSchema.set(\"toObject\", { virtuals: true });\n\n// Force schema refresh to avoid enum validation conflicts\nif (mongoose.models.User) {\n\tdelete mongoose.models.User;\n}\nif (mongoose.modelSchemas && mongoose.modelSchemas.User) {\n\tdelete mongoose.modelSchemas.User;\n}\n\nexport default mongoose.model(\"User\", UserSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACtC,QAAQ;QACP,MAAM;QACN,UAAU;QACV,QAAQ;IACT;IACA,6CAA6C;IAC7C,UAAU;QACT,MAAM;QACN,UAAU;IACX;IACA,oCAAoC;IACpC,UAAU;QACT,MAAM;QACN,SAAS;QACT,UAAU;IACX;IACA,kCAAkC;IAClC,MAAM;QACL,MAAM;QACN,UAAU;IACX;IACA,QAAQ;QACP,MAAM;QACN,MAAM;YAAC;YAAU;SAAO;QACxB,UAAU;QACV,SAAS;IACV;IACA,eAAe;QACd,MAAM;QACN,UAAU;QACV,SAAS,IAAI,KAAK,MAAM,GAAG,IAAI;IAChC;IACA,OAAO;QACN,MAAM;QACN,UAAU;IACX;IACA,QAAQ;QACP,MAAM;QACN,UAAU;QACV,SAAS;IACV;IACA,WAAW;QACV,MAAM;QACN,MAAM;YAAC;YAAQ;YAAW;SAAO;QACjC,UAAU;IACX;IACA,gCAAgC;IAChC,eAAe;QACd,MAAM;QACN,SAAS;IACV;IACA,mBAAmB;QAClB,MAAM;QACN,UAAU;IACX;IACA,2BAA2B;IAC3B,iBAAiB;QAChB,gBAAgB;YACf,MAAM;YACN,SAAS;QACV;QACA,iBAAiB;YAChB,MAAM;YACN,SAAS;QACV;QACA,kBAAkB;YACjB,MAAM;YACN,SAAS;QACV;QACA,kBAAkB;YACjB,MAAM;YACN,SAAS;QACV;QACA,mBAAmB;YAClB,MAAM;YACN,SAAS;QACV;IACD;IACA,WAAW;QACV,MAAM;QACN,SAAS,KAAK,GAAG;IAClB;IACA,WAAW;QACV,MAAM;QACN,SAAS,KAAK,GAAG;IAClB;AACD;AAEA,iDAAiD;AACjD,WAAW,OAAO,CAAC,wBAAwB;IAC1C,KAAK;IACL,YAAY;IACZ,cAAc;AACf;AAEA,4BAA4B;AAC5B,WAAW,OAAO,CAAC,YAAY;IAC9B,KAAK;IACL,YAAY;IACZ,cAAc;AACf;AAEA,iEAAiE;AACjE,WAAW,GAAG,CAAC,UAAU;IAAE,UAAU;AAAK;AAC1C,WAAW,GAAG,CAAC,YAAY;IAAE,UAAU;AAAK;AAE5C,0DAA0D;AAC1D,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,EAAE;IACzB,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI;AAC5B;AACA,IAAI,yGAAA,CAAA,UAAQ,CAAC,YAAY,IAAI,yGAAA,CAAA,UAAQ,CAAC,YAAY,CAAC,IAAI,EAAE;IACxD,OAAO,yGAAA,CAAA,UAAQ,CAAC,YAAY,CAAC,IAAI;AAClC;uCAEe,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelng/Desktop/HarmoniqFengShui/FengShuiLayout/src/lib/userUtils.js"],"sourcesContent":["import dbConnect from \"@/lib/mongoose\";\nimport User from \"@/models/User\";\n\nexport async function createUserIfNotExists(userId, email) {\n\ttry {\n\t\tawait dbConnect();\n\n\t\t// Check if user already exists\n\t\tconst existingUser = await User.findOne({ userId });\n\n\t\tif (!existingUser) {\n\t\t\t// Create new user with default data\n\t\t\tconst newUser = new User({\n\t\t\t\tuserId: userId,\n\t\t\t\temail: email,\n\t\t\t\tgender: \"female\", // default\n\t\t\t\tbirthDateTime: new Date(1996, 2, 12, 22), // default\n\t\t\t\tisLock: true, // user starts locked\n\t\t\t\tgenStatus: \"none\", // default status\n\t\t\t});\n\n\t\t\tawait newUser.save();return newUser;\n\t\t}\n\n\t\treturn existingUser;\n\t} catch (error) {throw error;\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,sBAAsB,MAAM,EAAE,KAAK;IACxD,IAAI;QACH,MAAM,CAAA,GAAA,wHAAA,CAAA,UAAS,AAAD;QAEd,+BAA+B;QAC/B,MAAM,eAAe,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAO;QAEjD,IAAI,CAAC,cAAc;YAClB,oCAAoC;YACpC,MAAM,UAAU,IAAI,uHAAA,CAAA,UAAI,CAAC;gBACxB,QAAQ;gBACR,OAAO;gBACP,QAAQ;gBACR,eAAe,IAAI,KAAK,MAAM,GAAG,IAAI;gBACrC,QAAQ;gBACR,WAAW;YACZ;YAEA,MAAM,QAAQ,IAAI;YAAG,OAAO;QAC7B;QAEA,OAAO;IACR,EAAE,OAAO,OAAO;QAAC,MAAM;IACvB;AACD","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelng/Desktop/HarmoniqFengShui/FengShuiLayout/src/lib/password.js"],"sourcesContent":["import bcrypt from \"bcryptjs\";\n\nexport async function hashPassword(password) {\n\tconst saltRounds = 12;\n\treturn await bcrypt.hash(password, saltRounds);\n}\n\nexport async function verifyPassword(password, hashedPassword) {\n\treturn await bcrypt.compare(password, hashedPassword);\n}\n\nexport function validatePassword(password) {\n\t// Password must be at least 8 characters long and contain at least one letter and one number\n\tconst minLength = 8;\n\tconst hasLetter = /[a-zA-Z]/.test(password);\n\tconst hasNumber = /\\d/.test(password);\n\n\treturn {\n\t\tisValid: password.length >= minLength && hasLetter && hasNumber,\n\t\tmessage:\n\t\t\tpassword.length < minLength\n\t\t\t\t? \"Password must be at least 8 characters long\"\n\t\t\t\t: !hasLetter || !hasNumber\n\t\t\t\t\t? \"Password must contain at least one letter and one number\"\n\t\t\t\t\t: \"\",\n\t};\n}\n\nexport function validateEmail(email) {\n\tconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\treturn {\n\t\tisValid: emailRegex.test(email),\n\t\tmessage: !emailRegex.test(email)\n\t\t\t? \"Please enter a valid email address\"\n\t\t\t: \"\",\n\t};\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,eAAe,aAAa,QAAQ;IAC1C,MAAM,aAAa;IACnB,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;AACpC;AAEO,eAAe,eAAe,QAAQ,EAAE,cAAc;IAC5D,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU;AACvC;AAEO,SAAS,iBAAiB,QAAQ;IACxC,6FAA6F;IAC7F,MAAM,YAAY;IAClB,MAAM,YAAY,WAAW,IAAI,CAAC;IAClC,MAAM,YAAY,KAAK,IAAI,CAAC;IAE5B,OAAO;QACN,SAAS,SAAS,MAAM,IAAI,aAAa,aAAa;QACtD,SACC,SAAS,MAAM,GAAG,YACf,gDACA,CAAC,aAAa,CAAC,YACd,6DACA;IACN;AACD;AAEO,SAAS,cAAc,KAAK;IAClC,MAAM,aAAa;IACnB,OAAO;QACN,SAAS,WAAW,IAAI,CAAC;QACzB,SAAS,CAAC,WAAW,IAAI,CAAC,SACvB,uCACA;IACJ;AACD","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelng/Desktop/HarmoniqFengShui/FengShuiLayout/src/auth.ts"],"sourcesContent":["import NextAuth, { customFetch } from \"next-auth\";\nimport type { NextAuthConfig } from \"next-auth\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport AppleProvider from \"next-auth/providers/apple\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport dbConnect from \"@/lib/mongoose\";\nimport User from \"@/models/User\";\nimport { createUserIfNotExists } from \"@/lib/userUtils\";\nimport { verifyPassword } from \"@/lib/password\";\n\nexport const { handlers, signIn, signOut, auth } = NextAuth({\n\ttrustHost: true,\n\tproviders: [\n\t\tGoogleProvider({\n\t\t\tclientId: process.env.GOOGLE_CLIENT_ID as string,\n\t\t\tclientSecret: process.env.GOOGLE_CLIENT_SECRET as string,\n\t\t}),\n\t\tAppleProvider({\n\t\t\tclientId: process.env.APPLE_ID as string,\n\t\t\tclientSecret: process.env.APPLE_CLIENT_SECRET as string,\n\t\t}),\n\t\tCredentialsProvider({\n\t\t\tname: \"credentials\",\n\t\t\tcredentials: {\n\t\t\t\temail: { label: \"Email\", type: \"email\" },\n\t\t\t\tpassword: { label: \"Password\", type: \"password\" },\n\t\t\t},\n\t\t\tasync authorize(credentials) {\n\t\t\t\tif (!credentials?.email || !credentials?.password) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tawait dbConnect();\n\n\t\t\t\t\t// Find user by email\n\t\t\t\t\tconst user = await User.findOne({\n\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t{ email: credentials.email },\n\t\t\t\t\t\t\t{ userId: credentials.email },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprovider: \"credentials\",\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!user || !user.password) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Verify password\n\t\t\t\t\tconst isPasswordValid = await verifyPassword(\n\t\t\t\t\t\tcredentials.password as string,\n\t\t\t\t\t\tuser.password\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!isPasswordValid) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return user object\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: user._id.toString(),\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\tname: user.name,\n\t\t\t\t\t\tuserId: user.userId,\n\t\t\t\t\t};\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(\"Authentication error:\", error);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\t\t}),\n\t],\n\tsecret: process.env.NEXTAUTH_SECRET as string,\n\tcallbacks: {\n\t\tasync signIn({ user, account, profile }) {\n\t\t\ttry {\n\t\t\t\tconst userId = user.email;\n\t\t\t\tif (!userId) return false;\n\n\t\t\t\t// For OAuth providers, create user if not exists\n\t\t\t\tif (\n\t\t\t\t\taccount?.provider === \"google\" ||\n\t\t\t\t\taccount?.provider === \"apple\"\n\t\t\t\t) {\n\t\t\t\t\tawait createUserIfNotExists(userId, user.email);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error in signIn callback:\", error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tasync jwt({ token, user, account }) {\n\t\t\tif (account && user) {\n\t\t\t\ttoken.accessToken = account.access_token;\n\t\t\t\ttoken.id = user.id;\n\t\t\t\ttoken.userId = user.userId || user.email;\n\t\t\t}\n\t\t\treturn token;\n\t\t},\n\t\tasync session({ session, token }) {\n\t\t\tif (token && session.user) {\n\t\t\t\t(session.user as any) = {\n\t\t\t\t\t...session.user,\n\t\t\t\t\tid: token.sub,\n\t\t\t\t\tuserId: token.userId || session.user.email,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn session;\n\t\t},\n\t},\n\tpages: {\n\t\tsignIn: \"/auth/login\",\n\t},\n} satisfies NextAuthConfig);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelng/Desktop/HarmoniqFengShui/FengShuiLayout/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { handlers } from \"@/auth\"; // Referring to the auth.ts we just created\nexport const { GET, POST } = handlers;\n"],"names":[],"mappings":";;;;AAAA,+LAAmC,2CAA2C;;AACvE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,6GAAA,CAAA,WAAQ","debugId":null}}]
}